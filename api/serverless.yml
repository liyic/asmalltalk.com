service: asmalltalk-api

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage}
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

package:
  include:
    - handler.js
    - users/handler.js
    - auth
    - utils
    - node_modules/babel-runtime
    - node_modules/node-fetch
    - node_modules/@octokit/rest

functions:
  create-user:
    handler: users/handler.create
    events:
      - http:
          path: /users
          method: post
          cors: true
  get-user:
    handler: users/handler.get
    events:
      - http:
          path: /users/{id}
          method: get
          cors: true
  update-user:
    handler: users/handler.update
    events:
      - http:
          path: /users/{id}
          method: put
          cors: true
  auth:
    handler: auth/handler.handle
    events:
      - http:
          path: /auth
          method: get
          cors: true
  is-v2-user:
    handler: auth/v2ex/index.getUser
    - http:
        path: auth/v2ex/user
        method: get
        cors: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
